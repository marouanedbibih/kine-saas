{
  "openapi": "3.0.0",
  "paths": {
    "/api/auth/login": {
      "post": {
        "operationId": "AuthController_login",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "statusCode": 401,
                    "message": "Invalid email or password",
                    "error": "Unauthorized"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Account deactivated",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "statusCode": 403,
                    "message": "Your account has been deactivated. Please contact support.",
                    "error": "Forbidden"
                  }
                }
              }
            }
          }
        },
        "summary": "User login",
        "tags": [
          "api/auth"
        ]
      }
    },
    "/api/auth/refresh": {
      "post": {
        "operationId": "AuthController_refreshToken",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshTokenDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Token refreshed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Invalid refresh token",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "statusCode": 401,
                    "message": "Invalid refresh token",
                    "error": "Unauthorized"
                  }
                }
              }
            }
          }
        },
        "summary": "Refresh access token",
        "tags": [
          "api/auth"
        ]
      }
    },
    "/api/auth/logout": {
      "post": {
        "operationId": "AuthController_logout",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Logout successful",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "message": "Logged out successfully"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "User logout (token invalidation)",
        "tags": [
          "api/auth"
        ]
      }
    },
    "/api/users": {
      "post": {
        "operationId": "UsersController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "id": "uuid-string",
                    "email": "john.doe@example.com",
                    "nom": "Doe",
                    "prenom": "John",
                    "role": "PATIENT",
                    "actif": true,
                    "dateCreation": "2024-01-01T00:00:00.000Z",
                    "dateModification": "2024-01-01T00:00:00.000Z"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data"
          },
          "409": {
            "description": "Email already exists"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Create a new user (Admin only)",
        "tags": [
          "api/users"
        ]
      },
      "get": {
        "operationId": "UsersController_findAll",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page number",
            "schema": {
              "minimum": 1,
              "example": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Number of items per page",
            "schema": {
              "minimum": 1,
              "maximum": 100,
              "example": 10,
              "type": "number"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Search keyword to filter users by email, nom, or prenom",
            "schema": {
              "example": "john",
              "type": "string"
            }
          },
          {
            "name": "role",
            "required": false,
            "in": "query",
            "description": "Filter users by role",
            "schema": {
              "type": "string",
              "enum": [
                "KINESITHERAPEUTE",
                "ADMIN"
              ]
            }
          },
          {
            "name": "actif",
            "required": false,
            "in": "query",
            "description": "Filter by active status",
            "schema": {
              "example": true,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Paginated list of users",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "data": [
                      {
                        "id": "uuid-string",
                        "email": "john.doe@example.com",
                        "nom": "Doe",
                        "prenom": "John",
                        "role": "PATIENT",
                        "actif": true,
                        "dateCreation": "2024-01-01T00:00:00.000Z",
                        "dateModification": "2024-01-01T00:00:00.000Z"
                      }
                    ],
                    "meta": {
                      "total": 1,
                      "page": 1,
                      "limit": 10,
                      "totalPages": 1
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get paginated list of users with optional filters",
        "tags": [
          "api/users"
        ]
      }
    },
    "/api/users/{id}": {
      "get": {
        "operationId": "UsersController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "User ID (UUID)",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User details",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "id": "uuid-string",
                    "email": "john.doe@example.com",
                    "nom": "Doe",
                    "prenom": "John",
                    "role": "PATIENT",
                    "actif": true,
                    "dateCreation": "2024-01-01T00:00:00.000Z",
                    "dateModification": "2024-01-01T00:00:00.000Z"
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get a specific user by ID",
        "tags": [
          "api/users"
        ]
      },
      "patch": {
        "operationId": "UsersController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "User ID (UUID)",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User updated successfully"
          },
          "404": {
            "description": "User not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Update a user",
        "tags": [
          "api/users"
        ]
      },
      "delete": {
        "operationId": "UsersController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "User ID (UUID)",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "User deleted successfully"
          },
          "404": {
            "description": "User not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Delete a user",
        "tags": [
          "api/users"
        ]
      }
    },
    "/api/users/{id}/change-password": {
      "patch": {
        "operationId": "UsersController_changePassword",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "User ID (UUID)",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePasswordDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password changed successfully"
          },
          "400": {
            "description": "Invalid current password"
          },
          "404": {
            "description": "User not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Change user password",
        "tags": [
          "api/users"
        ]
      }
    },
    "/api/users/{id}/toggle-status": {
      "patch": {
        "operationId": "UsersController_toggleStatus",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "User ID (UUID)",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User status toggled successfully"
          },
          "404": {
            "description": "User not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Toggle user active status",
        "tags": [
          "api/users"
        ]
      }
    },
    "/api/patients": {
      "post": {
        "operationId": "PatientController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePatientDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Patient created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatientResponseDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Create a new patient",
        "tags": [
          "patients"
        ]
      },
      "get": {
        "operationId": "PatientController_findAll",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return all patients",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PatientResponseDto"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get all patients with optional filtering",
        "tags": [
          "patients"
        ]
      }
    },
    "/api/patients/{id}": {
      "get": {
        "operationId": "PatientController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return patient details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatientResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "Patient not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get patient by ID",
        "tags": [
          "patients"
        ]
      },
      "patch": {
        "operationId": "PatientController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePatientDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Patient updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatientResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "Patient not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Update patient by ID",
        "tags": [
          "patients"
        ]
      },
      "delete": {
        "operationId": "PatientController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Patient deleted successfully"
          },
          "404": {
            "description": "Patient not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Delete patient by ID",
        "tags": [
          "patients"
        ]
      }
    },
    "/api/patients/{id}/photo": {
      "post": {
        "operationId": "PatientController_uploadPhoto",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Upload patient profile photo",
        "tags": [
          "patients"
        ]
      }
    }
  },
  "info": {
    "title": "KINE-SAAS API",
    "description": "API documentation for the KINE-SAAS physiotherapy backend",
    "version": "1.0",
    "contact": {}
  },
  "tags": [
    {
      "name": "auth",
      "description": "Authentication endpoints"
    },
    {
      "name": "users",
      "description": "User management endpoints"
    },
    {
      "name": "patients",
      "description": "Patient management endpoints"
    },
    {
      "name": "medical-records",
      "description": "Medical records management endpoints"
    },
    {
      "name": "appointments",
      "description": "Appointment scheduling endpoints"
    },
    {
      "name": "documents",
      "description": "Document management endpoints"
    }
  ],
  "servers": [
    {
      "url": "http://localhost:3001"
    }
  ],
  "components": {
    "securitySchemes": {
      "jwt": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "type": "http",
        "name": "JWT",
        "description": "Enter JWT token",
        "in": "header"
      }
    },
    "schemas": {
      "LoginDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "admin@kinesaas.ma",
            "description": "User email address"
          },
          "password": {
            "type": "string",
            "example": "password123",
            "description": "User password",
            "minLength": 6
          }
        },
        "required": [
          "email",
          "password"
        ]
      },
      "AuthUserDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "uuid-string",
            "description": "User ID"
          },
          "email": {
            "type": "string",
            "example": "admin@kinesaas.ma",
            "description": "User email"
          },
          "prenom": {
            "type": "string",
            "example": "Admin",
            "description": "User first name"
          },
          "nom": {
            "type": "string",
            "example": "System",
            "description": "User last name"
          },
          "role": {
            "type": "string",
            "example": "ADMIN",
            "description": "User role"
          },
          "actif": {
            "type": "boolean",
            "example": true,
            "description": "User active status"
          }
        },
        "required": [
          "id",
          "email",
          "prenom",
          "nom",
          "role",
          "actif"
        ]
      },
      "TokenResponseDto": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...",
            "description": "JWT access token"
          },
          "refreshToken": {
            "type": "string",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...",
            "description": "JWT refresh token"
          },
          "expiresIn": {
            "type": "number",
            "example": 900,
            "description": "Access token expiration time in seconds"
          },
          "tokenType": {
            "type": "string",
            "example": "Bearer",
            "description": "Token type"
          }
        },
        "required": [
          "accessToken",
          "refreshToken",
          "expiresIn",
          "tokenType"
        ]
      },
      "LoginResponseDto": {
        "type": "object",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/AuthUserDto"
          },
          "tokens": {
            "$ref": "#/components/schemas/TokenResponseDto"
          }
        },
        "required": [
          "user",
          "tokens"
        ]
      },
      "RefreshTokenDto": {
        "type": "object",
        "properties": {
          "refreshToken": {
            "type": "string",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...",
            "description": "Refresh token"
          }
        },
        "required": [
          "refreshToken"
        ]
      },
      "CreateUserDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "john.doe@example.com",
            "description": "Unique email address"
          },
          "password": {
            "type": "string",
            "example": "SecurePassword123!",
            "description": "Password must be at least 6 characters",
            "minLength": 6
          },
          "nom": {
            "type": "string",
            "example": "Doe",
            "description": "User last name"
          },
          "prenom": {
            "type": "string",
            "example": "John",
            "description": "User first name"
          },
          "role": {
            "type": "string",
            "enum": [
              "KINESITHERAPEUTE",
              "ADMIN"
            ],
            "example": "KINESITHERAPEUTE",
            "description": "User role in the system"
          },
          "actif": {
            "type": "boolean",
            "example": true,
            "description": "Whether the user account is active",
            "default": true
          }
        },
        "required": [
          "email",
          "password",
          "nom",
          "prenom",
          "role"
        ]
      },
      "UpdateUserDto": {
        "type": "object",
        "properties": {
          "actif": {
            "type": "boolean",
            "example": true,
            "description": "Whether the user account is active"
          }
        }
      },
      "ChangePasswordDto": {
        "type": "object",
        "properties": {
          "currentPassword": {
            "type": "string",
            "example": "OldPassword123!",
            "description": "Current password"
          },
          "newPassword": {
            "type": "string",
            "example": "NewPassword123!",
            "description": "New password (minimum 6 characters)",
            "minLength": 6
          }
        },
        "required": [
          "currentPassword",
          "newPassword"
        ]
      },
      "Gender": {
        "type": "string",
        "enum": [
          "male",
          "female",
          "other",
          "prefer-not-to-say"
        ]
      },
      "MaritalStatus": {
        "type": "string",
        "enum": [
          "single",
          "married",
          "divorced",
          "widowed",
          "separated"
        ]
      },
      "PreferredContact": {
        "type": "string",
        "enum": [
          "phone",
          "email",
          "sms"
        ]
      },
      "CreateEmergencyContactDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "relationship": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string"
          },
          "email": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "relationship",
          "phoneNumber"
        ]
      },
      "CreatePatientDto": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string"
          },
          "middleName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "dateOfBirth": {
            "type": "string"
          },
          "gender": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Gender"
              }
            ]
          },
          "maritalStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MaritalStatus"
              }
            ]
          },
          "phoneNumber": {
            "type": "string"
          },
          "alternativePhoneNumber": {
            "type": "string"
          },
          "preferredContact": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PreferredContact"
              }
            ]
          },
          "active": {
            "type": "boolean"
          },
          "address": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "zipCode": {
            "type": "string"
          },
          "kinesitherapeuteId": {
            "type": "string"
          },
          "emergencyContact": {
            "$ref": "#/components/schemas/CreateEmergencyContactDto"
          }
        },
        "required": [
          "firstName",
          "lastName",
          "email",
          "dateOfBirth",
          "gender"
        ]
      },
      "MedicalRecordResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "medicalHistory": {
            "type": "string"
          },
          "allergies": {
            "type": "string"
          },
          "currentMedications": {
            "type": "string"
          },
          "previousTreatments": {
            "type": "string"
          },
          "diagnosisNotes": {
            "type": "string"
          },
          "treatmentPlan": {
            "type": "string"
          }
        },
        "required": [
          "id"
        ]
      },
      "InsuranceInfoResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "provider": {
            "type": "string"
          },
          "policyNumber": {
            "type": "string"
          },
          "groupNumber": {
            "type": "string"
          },
          "primaryInsuredName": {
            "type": "string"
          },
          "relationship": {
            "type": "string"
          },
          "coverageDetails": {
            "type": "string"
          },
          "validUntil": {
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "id",
          "provider",
          "policyNumber",
          "primaryInsuredName"
        ]
      },
      "EmergencyContactResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "relationship": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string"
          },
          "email": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "name",
          "relationship",
          "phoneNumber"
        ]
      },
      "PatientResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "dateOfBirth": {
            "format": "date-time",
            "type": "string"
          },
          "gender": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "profilePhotoUrl": {
            "type": "string"
          },
          "medicalRecord": {
            "$ref": "#/components/schemas/MedicalRecordResponseDto"
          },
          "insuranceInfo": {
            "$ref": "#/components/schemas/InsuranceInfoResponseDto"
          },
          "emergencyContacts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EmergencyContactResponseDto"
            }
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "id",
          "firstName",
          "lastName",
          "email",
          "dateOfBirth",
          "gender",
          "phoneNumber",
          "address",
          "profilePhotoUrl",
          "medicalRecord",
          "insuranceInfo",
          "emergencyContacts",
          "createdAt",
          "updatedAt"
        ]
      },
      "UpdatePatientDto": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string"
          },
          "middleName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "dateOfBirth": {
            "type": "string"
          },
          "gender": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Gender"
              }
            ]
          },
          "maritalStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MaritalStatus"
              }
            ]
          },
          "phoneNumber": {
            "type": "string"
          },
          "alternativePhoneNumber": {
            "type": "string"
          },
          "preferredContact": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PreferredContact"
              }
            ]
          },
          "active": {
            "type": "boolean"
          },
          "address": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "zipCode": {
            "type": "string"
          },
          "kinesitherapeuteId": {
            "type": "string"
          },
          "emergencyContact": {
            "$ref": "#/components/schemas/CreateEmergencyContactDto"
          }
        }
      }
    }
  }
}